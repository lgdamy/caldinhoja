/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package caldinho.ja.views;

import caldinho.ja.dao.ClienteDAOImpl;
import caldinho.ja.dao.FonteDados;
import caldinho.ja.dao.VendaDaoImpl;
import caldinho.ja.escopo.Caldinho;
import caldinho.ja.escopo.AboboraCarne;
import caldinho.ja.escopo.CaldoVerde;
import caldinho.ja.escopo.Canja;
import caldinho.ja.escopo.Cliente;
import caldinho.ja.escopo.Ervilha;
import caldinho.ja.escopo.Feijao;
import caldinho.ja.escopo.MandioqAlhoPorro;
import caldinho.ja.escopo.Palmito;
import caldinho.ja.escopo.Venda;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LuizGuilherme
 */
public class CardLayoutFrame extends javax.swing.JFrame {

    /**
     * Creates new form CardLayoutFrame
     */
    private int vrd=0,mnd=0,abb=0,pal=0,fjo=0,can=0,erv=0,tor=0,qjo=0,bac=0,ceb=0;
    public CardLayoutFrame() {

        initComponents();

        
        ////FUNCIONAIS
        tabelaClientes.removeColumn(tabelaClientes.getColumnModel().getColumn(4));
        tabelaVendas.removeColumn(tabelaVendas.getColumnModel().getColumn(5));
        labelcondicional1.setVisible(false);
        labelcondicional2.setVisible(false);
        editClienteBtn.setVisible(false);
        labelcondicional.setVisible(false);
        deleteVendaBtn.setVisible(false);
        dnABB.setVisible(false);dnBAC.setVisible(false);dnCEB.setVisible(false);
        dnERV.setVisible(false);dnFJO.setVisible(false);dnGAL.setVisible(false);
        dnMND.setVisible(false);dnPAL.setVisible(false);dnQJO.setVisible(false);
        dnTOR.setVisible(false);dnVRD.setVisible(false);
        ////FUNCIONAIS

        //AÇÕES
        //----------------------------------------------------------------------
        ////BUSCA DE CLIENTES EM CLIENTES
        buscaField.addActionListener(buscaClientesAction);
        buscaBtn.addActionListener(buscaClientesAction);
        ////NOVO CLIENTE
        nvCliBtn.addActionListener(novoClienteAction);
        ////EDIT-DELETE CLIENTE
        editClienteBtn.addActionListener(editClienteAction);
        ////BUSCA DE CLIENTES NA VENDA
        buscaClienteVendaField.addActionListener(buscaClientesVendasAction);
        buscaClienteVendaBtn.addActionListener(buscaClientesVendasAction);
        iniciarNovaVendaBtn.addActionListener(buscaClientesVendasAction);
        ////REALIZA NOVA VENDA
        novaVendaBtn.addActionListener(novaVendaAction);
        ////BUSCA VENDAS
        buscaVendasBtn.addActionListener(buscaVendasAction);
        ////DELETE VENDA
        deleteVendaBtn.addActionListener(deleteVendaAction);
        ////BOTOES DE CUSTOMIZAÇÃO DA VENDA
        upABB.addActionListener(atualizaValorAction);upBAC.addActionListener(atualizaValorAction);upCEB.addActionListener(atualizaValorAction);upERV.addActionListener(atualizaValorAction);upFJO.addActionListener(atualizaValorAction);upGAL.addActionListener(atualizaValorAction);upMND.addActionListener(atualizaValorAction);upPAL.addActionListener(atualizaValorAction);upQJO.addActionListener(atualizaValorAction);upTOR.addActionListener(atualizaValorAction);upVRD.addActionListener(atualizaValorAction);
        dnABB.addActionListener(atualizaValorAction);dnBAC.addActionListener(atualizaValorAction);dnCEB.addActionListener(atualizaValorAction);dnERV.addActionListener(atualizaValorAction);dnFJO.addActionListener(atualizaValorAction);dnGAL.addActionListener(atualizaValorAction);dnMND.addActionListener(atualizaValorAction);dnPAL.addActionListener(atualizaValorAction);dnQJO.addActionListener(atualizaValorAction);dnTOR.addActionListener(atualizaValorAction);dnVRD.addActionListener(atualizaValorAction);

    }
    public String cardname = "index";
    String ingredientesCaldoVerde, ingredientesMandioqAlhoPoro, ingredientesAboboraCarne, ingredientesPalmito, ingredientesFeijao, ingredientesCanja, ingredientesErvilha;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        em = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("CaldinhoJaPRPU").createEntityManager();
        paiPanel = new javax.swing.JPanel();
        indexPnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        estoquePnl = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        clientesPnl = new javax.swing.JPanel();
        table = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        novoBtn = new javax.swing.JButton();
        buscaField = new javax.swing.JTextField();
        buscaBtn = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        editClienteBtn = new javax.swing.JButton();
        labelcondicional2 = new javax.swing.JLabel();
        labelcondicional1 = new javax.swing.JLabel();
        novo = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        telefoneField = new java.awt.TextField();
        apartamentoField = new java.awt.TextField();
        nomeField = new java.awt.TextField();
        enderecoField = new java.awt.TextField();
        nvCliBtn = new javax.swing.JButton();
        canNvCliBtn = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        vendasPnl = new javax.swing.JPanel();
        listaVendaPnl = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        listaVendasScroll = new javax.swing.JScrollPane();
        tabelaVendas = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        iniciarNovaVendaBtn = new javax.swing.JButton();
        dataInicio = new org.jdesktop.swingx.JXDatePicker();
        dataFim = new org.jdesktop.swingx.JXDatePicker();
        jSeparator3 = new javax.swing.JSeparator();
        buscaVendasBtn = new javax.swing.JButton();
        deleteVendaBtn = new javax.swing.JButton();
        labelcondicional = new javax.swing.JLabel();
        novaVendaPnl = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        novaVendaBtn = new javax.swing.JButton();
        listaVendasBtn = new javax.swing.JButton();
        caldoVerdeLabel = new javax.swing.JLabel();
        mandioquinhaLabel = new javax.swing.JLabel();
        aboboraLabel = new javax.swing.JLabel();
        palmitoLabel = new javax.swing.JLabel();
        feijaoLabel = new javax.swing.JLabel();
        canjaLabel = new javax.swing.JLabel();
        ervilhaLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        torradinhaLabel = new javax.swing.JLabel();
        baconLabel = new javax.swing.JLabel();
        cebolinhaLabel = new javax.swing.JLabel();
        queijoLabel = new javax.swing.JLabel();
        listaClientecomboBox = new javax.swing.JComboBox();
        buscaClienteVendaField = new javax.swing.JTextField();
        buscaClienteVendaBtn = new javax.swing.JButton();
        diaVendaDatePicker = new org.jdesktop.swingx.JXDatePicker();
        upVRD = new javax.swing.JButton();
        dnVRD = new javax.swing.JButton();
        upMND = new javax.swing.JButton();
        dnMND = new javax.swing.JButton();
        dnABB = new javax.swing.JButton();
        dnPAL = new javax.swing.JButton();
        dnFJO = new javax.swing.JButton();
        dnGAL = new javax.swing.JButton();
        dnERV = new javax.swing.JButton();
        upABB = new javax.swing.JButton();
        upPAL = new javax.swing.JButton();
        upFJO = new javax.swing.JButton();
        upGAL = new javax.swing.JButton();
        upERV = new javax.swing.JButton();
        upTOR = new javax.swing.JButton();
        upBAC = new javax.swing.JButton();
        upCEB = new javax.swing.JButton();
        upQJO = new javax.swing.JButton();
        dnTOR = new javax.swing.JButton();
        dnBAC = new javax.swing.JButton();
        dnCEB = new javax.swing.JButton();
        dnQJO = new javax.swing.JButton();
        valorField = new javax.swing.JLabel();
        receitasPnl = new javax.swing.JPanel();
        receitasCardsPnl = new javax.swing.JPanel();
        receitasPnlCaldoVerde = new javax.swing.JPanel();
        nomeCaldo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientesText = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        passosText = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        receitaComboBox = new javax.swing.JComboBox();
        fotosCaldos = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        estoqueBtn = new javax.swing.JButton();
        clientesBtn = new javax.swing.JButton();
        vendasBtn = new javax.swing.JButton();
        receitasBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CALDINHO JÁ");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        paiPanel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        paiPanel.setPreferredSize(new java.awt.Dimension(1002, 700));
        paiPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/caldinhojagrande.jpg"))); // NOI18N

        javax.swing.GroupLayout indexPnlLayout = new javax.swing.GroupLayout(indexPnl);
        indexPnl.setLayout(indexPnlLayout);
        indexPnlLayout.setHorizontalGroup(
            indexPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPnlLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1002, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
        );
        indexPnlLayout.setVerticalGroup(
            indexPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(indexPnlLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        paiPanel.add(indexPnl, "index");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ESTOQUE");

        javax.swing.GroupLayout estoquePnlLayout = new javax.swing.GroupLayout(estoquePnl);
        estoquePnl.setLayout(estoquePnlLayout);
        estoquePnlLayout.setHorizontalGroup(
            estoquePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estoquePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
                .addContainerGap())
        );
        estoquePnlLayout.setVerticalGroup(
            estoquePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(estoquePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(645, Short.MAX_VALUE))
        );

        paiPanel.add(estoquePnl, "estoque");

        clientesPnl.setLayout(new java.awt.CardLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CLIENTES");

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Endereço", "Apartamento", "Telefone", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaClientes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaClientes.getTableHeader().setReorderingAllowed(false);
        tabelaClientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaClientesFocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(tabelaClientes);

        novoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        novoBtn.setText("NOVO");
        novoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoBtnActionPerformed(evt);
            }
        });

        buscaField.setToolTipText("Pesquisa...");
        buscaField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        buscaBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buscaBtn.setText("BUSCA");

        editClienteBtn.setBackground(new java.awt.Color(254, 254, 254));
        editClienteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/edit.png"))); // NOI18N

        labelcondicional2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelcondicional2.setForeground(new java.awt.Color(255, 51, 51));
        labelcondicional2.setText("REMOVER");

        labelcondicional1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelcondicional1.setForeground(new java.awt.Color(255, 51, 51));
        labelcondicional1.setText("EDITAR");

        javax.swing.GroupLayout tableLayout = new javax.swing.GroupLayout(table);
        table.setLayout(tableLayout);
        tableLayout.setHorizontalGroup(
            tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tableLayout.createSequentialGroup()
                .addGroup(tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buscaField)
                    .addComponent(buscaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2)
                    .addComponent(novoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(tableLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelcondicional2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelcondicional1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editClienteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        tableLayout.setVerticalGroup(
            tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tableLayout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(tableLayout.createSequentialGroup()
                        .addComponent(novoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscaField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buscaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editClienteBtn)
                            .addGroup(tableLayout.createSequentialGroup()
                                .addComponent(labelcondicional1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelcondicional2)
                                .addGap(14, 14, 14))))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        clientesPnl.add(table, "table");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("NOVO CLIENTE");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("NOME");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("ENDEREÇO");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("TELEFONE");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("APARTAMENTO");

        telefoneField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        apartamentoField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nomeField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        enderecoField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        nvCliBtn.setBackground(new java.awt.Color(204, 255, 204));
        nvCliBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nvCliBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/new_client.png"))); // NOI18N

        canNvCliBtn.setBackground(new java.awt.Color(255, 204, 204));
        canNvCliBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        canNvCliBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/cancel.png"))); // NOI18N
        canNvCliBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                canNvCliBtnActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(121, 189, 84));
        jLabel15.setText("NOVO");

        jLabel16.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("VOLTAR");

        javax.swing.GroupLayout novoLayout = new javax.swing.GroupLayout(novo);
        novo.setLayout(novoLayout);
        novoLayout.setHorizontalGroup(
            novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, novoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(novoLayout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomeField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enderecoField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(telefoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apartamentoField, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(novoLayout.createSequentialGroup()
                        .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nvCliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(canNvCliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(308, Short.MAX_VALUE))
        );
        novoLayout.setVerticalGroup(
            novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(novoLayout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enderecoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(apartamentoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(12, 12, 12)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(telefoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nvCliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(canNvCliBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16))
                .addContainerGap(391, Short.MAX_VALUE))
        );

        clientesPnl.add(novo, "novo");

        paiPanel.add(clientesPnl, "clientes");

        vendasPnl.setLayout(new java.awt.CardLayout());

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("VENDAS");

        tabelaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Cliente", "Sopas", "Adicionais", "Valor", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaVendas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabelaVendas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tabelaVendasFocusGained(evt);
            }
        });
        listaVendasScroll.setViewportView(tabelaVendas);
        if (tabelaVendas.getColumnModel().getColumnCount() > 0) {
            tabelaVendas.getColumnModel().getColumn(1).setMinWidth(300);
            tabelaVendas.getColumnModel().getColumn(4).setMaxWidth(45);
            tabelaVendas.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        jLabel13.setText("INÍCIO");

        jLabel14.setText("FINAL");

        iniciarNovaVendaBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        iniciarNovaVendaBtn.setText("NOVA VENDA");
        iniciarNovaVendaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iniciarNovaVendaBtnActionPerformed(evt);
            }
        });

        buscaVendasBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buscaVendasBtn.setText("PESQUISAR");

        deleteVendaBtn.setBackground(new java.awt.Color(255, 255, 255));
        deleteVendaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/delete.gif"))); // NOI18N

        labelcondicional.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelcondicional.setForeground(new java.awt.Color(255, 51, 51));
        labelcondicional.setText("DELETAR");

        javax.swing.GroupLayout listaVendaPnlLayout = new javax.swing.GroupLayout(listaVendaPnl);
        listaVendaPnl.setLayout(listaVendaPnlLayout);
        listaVendaPnlLayout.setHorizontalGroup(
            listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaVendaPnlLayout.createSequentialGroup()
                .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaVendaPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(listaVendaPnlLayout.createSequentialGroup()
                        .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator3)
                            .addComponent(iniciarNovaVendaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaVendaPnlLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelcondicional)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(deleteVendaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(listaVendaPnlLayout.createSequentialGroup()
                                .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(listaVendaPnlLayout.createSequentialGroup()
                                        .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dataInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(dataFim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel13)))
                                    .addComponent(buscaVendasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(listaVendasScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)))
                .addContainerGap())
        );
        listaVendaPnlLayout.setVerticalGroup(
            listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listaVendaPnlLayout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listaVendaPnlLayout.createSequentialGroup()
                        .addComponent(iniciarNovaVendaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(dataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(dataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(buscaVendasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(listaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteVendaBtn)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listaVendaPnlLayout.createSequentialGroup()
                                .addComponent(labelcondicional)
                                .addGap(26, 26, 26))))
                    .addComponent(listaVendasScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 648, Short.MAX_VALUE))
                .addContainerGap())
        );

        vendasPnl.add(listaVendaPnl, "listaVenda");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("NOVA VENDA");

        novaVendaBtn.setBackground(new java.awt.Color(204, 255, 204));
        novaVendaBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        novaVendaBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/soup.png"))); // NOI18N

        listaVendasBtn.setBackground(new java.awt.Color(255, 204, 204));
        listaVendasBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listaVendasBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/cancel.png"))); // NOI18N
        listaVendasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaVendasBtnActionPerformed(evt);
            }
        });

        caldoVerdeLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        caldoVerdeLabel.setText("0 Caldos Verdes");

        mandioquinhaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        mandioquinhaLabel.setText("0 Mandioquinhas com Alho Poró");

        aboboraLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        aboboraLabel.setText("0 Abóboras com Carne");

        palmitoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        palmitoLabel.setText("0 Caldos de Palmito");

        feijaoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        feijaoLabel.setText("0 Caldinhos de Feijão");

        canjaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        canjaLabel.setText("0 Canjas de Galinha");

        ervilhaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ervilhaLabel.setText("0 Caldos de Ervilha");

        torradinhaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        torradinhaLabel.setText("0 Torradinhas");

        baconLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        baconLabel.setText("0 Bacons");

        cebolinhaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cebolinhaLabel.setText("0 Cebolinhas");

        queijoLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        queijoLabel.setText("0 Queijos Ralados");

        listaClientecomboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        listaClientecomboBox.setToolTipText("");

        buscaClienteVendaBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        buscaClienteVendaBtn.setText("BUSCA");

        upVRD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upVRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upVRDActionPerformed(evt);
            }
        });

        dnVRD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnVRD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnVRDActionPerformed(evt);
            }
        });

        upMND.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upMNDActionPerformed(evt);
            }
        });

        dnMND.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnMND.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnMNDActionPerformed(evt);
            }
        });

        dnABB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnABB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnABBActionPerformed(evt);
            }
        });

        dnPAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnPAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnPALActionPerformed(evt);
            }
        });

        dnFJO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnFJO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnFJOActionPerformed(evt);
            }
        });

        dnGAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnGAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnGALActionPerformed(evt);
            }
        });

        dnERV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnERV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnERVActionPerformed(evt);
            }
        });

        upABB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upABB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upABBActionPerformed(evt);
            }
        });

        upPAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upPAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upPALActionPerformed(evt);
            }
        });

        upFJO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upFJO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upFJOActionPerformed(evt);
            }
        });

        upGAL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upGAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upGALActionPerformed(evt);
            }
        });

        upERV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upERV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upERVActionPerformed(evt);
            }
        });

        upTOR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upTOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upTORActionPerformed(evt);
            }
        });

        upBAC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upBAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBACActionPerformed(evt);
            }
        });

        upCEB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upCEB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upCEBActionPerformed(evt);
            }
        });

        upQJO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/up_arrow.png"))); // NOI18N
        upQJO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upQJOActionPerformed(evt);
            }
        });

        dnTOR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnTOR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnTORActionPerformed(evt);
            }
        });

        dnBAC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnBAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnBACActionPerformed(evt);
            }
        });

        dnCEB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnCEB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnCEBActionPerformed(evt);
            }
        });

        dnQJO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/dn_arrow.png"))); // NOI18N
        dnQJO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dnQJOActionPerformed(evt);
            }
        });

        valorField.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        valorField.setText("VALOR DO PEDIDO: R$0");

        javax.swing.GroupLayout novaVendaPnlLayout = new javax.swing.GroupLayout(novaVendaPnl);
        novaVendaPnl.setLayout(novaVendaPnlLayout);
        novaVendaPnlLayout.setHorizontalGroup(
            novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(novaVendaPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listaClientecomboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnVRD, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upVRD, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(diaVendaDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnMND, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upMND, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnABB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upABB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnPAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upPAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnFJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upFJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnGAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upGAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(dnERV, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upERV, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                                .addComponent(dnTOR, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(upTOR, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(buscaClienteVendaField, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, novaVendaPnlLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(palmitoLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dnQJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(upQJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(mandioquinhaLabel)
                                            .addComponent(caldoVerdeLabel)
                                            .addComponent(feijaoLabel)
                                            .addComponent(canjaLabel)
                                            .addComponent(aboboraLabel)
                                            .addComponent(ervilhaLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dnBAC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dnCEB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(upBAC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(upCEB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addComponent(buscaClienteVendaBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(novaVendaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(listaVendasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(torradinhaLabel)
                                            .addComponent(baconLabel)
                                            .addComponent(cebolinhaLabel)
                                            .addComponent(queijoLabel))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(82, 82, 82))
                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                        .addComponent(valorField)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        novaVendaPnlLayout.setVerticalGroup(
            novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(novaVendaPnlLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listaClientecomboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(novaVendaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(novaVendaPnlLayout.createSequentialGroup()
                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(buscaClienteVendaField, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buscaClienteVendaBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(diaVendaDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(torradinhaLabel)
                            .addComponent(dnVRD, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upVRD, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upTOR, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dnTOR, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(caldoVerdeLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upMND, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dnMND, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upBAC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(baconLabel)
                            .addComponent(dnBAC, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mandioquinhaLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dnCEB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dnABB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(upABB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(aboboraLabel)
                            .addComponent(upCEB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cebolinhaLabel))
                        .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(upQJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dnQJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(queijoLabel)))
                            .addGroup(novaVendaPnlLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(upPAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dnPAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(palmitoLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(upFJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(feijaoLabel)
                                    .addComponent(dnFJO, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(upGAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(canjaLabel)
                                    .addComponent(dnGAL, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(novaVendaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(upERV, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ervilhaLabel)
                                    .addComponent(dnERV, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(listaVendasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(valorField)
                .addContainerGap(296, Short.MAX_VALUE))
        );

        diaVendaDatePicker.setDate(Calendar.getInstance().getTime());

        vendasPnl.add(novaVendaPnl, "novaVenda");

        paiPanel.add(vendasPnl, "vendas");

        nomeCaldo.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        nomeCaldo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomeCaldo.setText("Caldo Verde");

        ingredientesText.setEditable(false);
        ingredientesText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane1.setViewportView(ingredientesText);

        passosText.setEditable(false);
        passosText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(passosText);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Ingredientes");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Passo-a-passo");

        javax.swing.GroupLayout receitasPnlCaldoVerdeLayout = new javax.swing.GroupLayout(receitasPnlCaldoVerde);
        receitasPnlCaldoVerde.setLayout(receitasPnlCaldoVerdeLayout);
        receitasPnlCaldoVerdeLayout.setHorizontalGroup(
            receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receitasPnlCaldoVerdeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nomeCaldo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receitasPnlCaldoVerdeLayout.createSequentialGroup()
                        .addGroup(receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 457, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        receitasPnlCaldoVerdeLayout.setVerticalGroup(
            receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receitasPnlCaldoVerdeLayout.createSequentialGroup()
                .addComponent(nomeCaldo)
                .addGap(22, 22, 22)
                .addGroup(receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(receitasPnlCaldoVerdeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)))
        );

        javax.swing.GroupLayout receitasCardsPnlLayout = new javax.swing.GroupLayout(receitasCardsPnl);
        receitasCardsPnl.setLayout(receitasCardsPnlLayout);
        receitasCardsPnlLayout.setHorizontalGroup(
            receitasCardsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(receitasPnlCaldoVerde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        receitasCardsPnlLayout.setVerticalGroup(
            receitasCardsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(receitasPnlCaldoVerde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        receitaComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        receitaComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Caldo Verde", "Abóbora com Carne", "Mandioquinha com Alho Poró", "Palmito", "Canja de Galinha", "Ervilha", "Feijão" }));
        receitaComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        receitaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receitaComboBoxActionPerformed(evt);
            }
        });

        fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/CaldoVerde.jpg"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("FAZER SOPA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout receitasPnlLayout = new javax.swing.GroupLayout(receitasPnl);
        receitasPnl.setLayout(receitasPnlLayout);
        receitasPnlLayout.setHorizontalGroup(
            receitasPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receitasPnlLayout.createSequentialGroup()
                .addGroup(receitasPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(receitasPnlLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(receitasPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fotosCaldos, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, receitasPnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(receitaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receitasCardsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        receitasPnlLayout.setVerticalGroup(
            receitasPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(receitasPnlLayout.createSequentialGroup()
                .addComponent(receitasCardsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1, 1, 1))
            .addGroup(receitasPnlLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(receitaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(fotosCaldos, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        paiPanel.add(receitasPnl, "receitas");

        estoqueBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        estoqueBtn.setText("ESTOQUE");
        estoqueBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estoqueBtnestoqueActionPerformed(evt);
            }
        });

        clientesBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        clientesBtn.setText("CLIENTES");
        clientesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clientesBtnclientesActionPerformed(evt);
            }
        });

        vendasBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        vendasBtn.setText("VENDAS");
        vendasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendasBtnvendasActionPerformed(evt);
            }
        });

        receitasBtn.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        receitasBtn.setText("RECEITAS");
        receitasBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                receitasBtnreceitasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(paiPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(estoqueBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clientesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(vendasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(receitasBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {clientesBtn, estoqueBtn, receitasBtn, vendasBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paiPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(estoqueBtn)
                    .addComponent(clientesBtn)
                    .addComponent(vendasBtn)
                    .addComponent(receitasBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    //IMPLEMENTAÇÕES DAS AÇÕES
    private final Action atualizaValorAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            
            int valor = 10 * (vrd + mnd + abb + pal + fjo + can + erv);
            valor += 2 * (tor+ qjo + bac + ceb);
            
            valorField.setText("VALOR DO PEDIDO: R$"+String.valueOf(valor));
        }
    };
    private final Action novoClienteAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            switch (JOptionPane.showConfirmDialog(paiPanel, "CONFIRMA ADIÇÃO DO CLIENTE?", "CONFIRMAÇÃO", JOptionPane.YES_NO_OPTION)) {
                case 0:
                    try {
                        Cliente cliente = new Cliente();
                        cliente.setNome(nomeField.getText().toUpperCase());
                        if (enderecoField.getText().isEmpty()) {
                            cliente.setEndereco("CLIENTE INTERNO");
                            cliente.setInterno(true);
                        } else {
                            cliente.setEndereco(enderecoField.getText().toUpperCase());
                        }
                        cliente.setApartamento(apartamentoField.getText().toUpperCase());
                        if (telefoneField.getText().length() >= 10) {
                            cliente.setDdd(Integer.parseInt(telefoneField.getText().substring(0, 2)));
                            cliente.setTelefone(Integer.parseInt(telefoneField.getText().substring(2)));
                        } else {
                            cliente.setDdd(11);
                            cliente.setTelefone(Integer.parseInt(telefoneField.getText()));
                        }
                        ClienteDAOImpl clienteDAO = new ClienteDAOImpl(em);
                        clienteDAO.novoCliente(cliente);
                        JOptionPane.showMessageDialog(paiPanel, cliente.getNome() + " ADICIONADO(A) COM SUCESSO", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                        nomeField.setText("");
                        enderecoField.setText("");
                        apartamentoField.setText("");
                        telefoneField.setText("");
                    } catch (NumberFormatException num) {
                        JOptionPane.showMessageDialog(paiPanel, "TELEFONE INCORRETO", "ERRO", JOptionPane.ERROR_MESSAGE);
                    }
                    break;
                default:
                    break;
            }

        }

    };
    private final Action novaVendaAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            int valor = 10 * (vrd + mnd + abb + pal + fjo + can + erv);
            valor += 2 * (tor+ qjo + bac + ceb);
            try {
                switch (JOptionPane.showConfirmDialog(paiPanel, "CONFIRMA A CONCLUSÃO DE VENDA? R$" + valor, "CONFIRMAÇÃO", JOptionPane.YES_NO_OPTION)) {
                    case 0:
                        Venda venda = new Venda();
                        VendaDaoImpl vdao = new VendaDaoImpl(em);

                        venda.setCaldinhos(new int[]{vrd, mnd, abb, pal, fjo, can, erv});
                        venda.setAdicionais(new int[]{tor, ceb, bac, qjo});
                        venda.setCliente((Cliente) listaClientecomboBox.getSelectedItem());
                        if (venda.getCliente() == null) {
                            throw new RuntimeException();
                        }
                        Calendar calendar = Calendar.getInstance();
                        calendar.setTime(diaVendaDatePicker.getDate());

                        venda.setDataVenda(calendar);

                        vdao.novaVenda(venda);
                        JOptionPane.showMessageDialog(paiPanel, "VENDA CONCLUÍDA", "SUCESSO", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception exc) {
                JOptionPane.showMessageDialog(paiPanel, "OCORREU UM ERRO", "FALHA", JOptionPane.ERROR_MESSAGE);
            }
        }
    };
    private final Action buscaClientesVendasAction = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e) {
            ClienteDAOImpl clienteDAO = new ClienteDAOImpl(em);
            listaClientecomboBox.removeAllItems();
            List<Cliente> listaClientes;
            if (buscaClienteVendaField.getText().isEmpty()) {
                listaClientes = clienteDAO.fetchClientes();
            } else {
                listaClientes = clienteDAO.fetchClientes(buscaClienteVendaField.getText());
            }

            for (Cliente listaCliente : listaClientes) {
                em.refresh(listaCliente);
                listaClientecomboBox.addItem(listaCliente);
            }
        }
    };
    private final Action buscaVendasAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {

            VendaDaoImpl vendaDAO = new VendaDaoImpl(em);

            if (dataInicio.getDate() == null || dataFim.getDate() == null) {
                JOptionPane.showMessageDialog(paiPanel, "ESPECIFIQUE AS DATAS ANTES DE PESQUISAR", "ERRO", JOptionPane.ERROR_MESSAGE);
            } else {
                DefaultTableModel modelo = (DefaultTableModel) tabelaVendas.getModel();
                modelo.setRowCount(0);
                Calendar inicio = Calendar.getInstance();
                Calendar fim = Calendar.getInstance();
                inicio.setTime(dataInicio.getDate());
                fim.setTime(dataFim.getDate());

                SimpleDateFormat sdf = new SimpleDateFormat("EEE - dd/MM/YYYY");
                for (Venda venda : vendaDAO.fetchVendas(inicio, fim)) {
                    em.refresh(venda);
                    String caldinhos = "";
                    String adicionais = "";
                    int valor = 0;
                    if (venda.getCaldinhos()[0] != 0) {
                        caldinhos += venda.getCaldinhos()[0] + " VRD ";
                    }
                    if (venda.getCaldinhos()[1] != 0) {
                        caldinhos += venda.getCaldinhos()[1] + " MDQ ";
                    }
                    if (venda.getCaldinhos()[2] != 0) {
                        caldinhos += venda.getCaldinhos()[2] + " ABB ";
                    }
                    if (venda.getCaldinhos()[3] != 0) {
                        caldinhos += venda.getCaldinhos()[3] + " PAL ";
                    }
                    if (venda.getCaldinhos()[4] != 0) {
                        caldinhos += venda.getCaldinhos()[4] + " FJO ";
                    }
                    if (venda.getCaldinhos()[5] != 0) {
                        caldinhos += venda.getCaldinhos()[5] + " GLN ";
                    }
                    if (venda.getCaldinhos()[6] != 0) {
                        caldinhos += venda.getCaldinhos()[6] + " ERV ";
                    }
                    if (venda.getAdicionais()[0] != 0) {
                        adicionais += venda.getAdicionais()[0] + " TRD ";
                    }
                    if (venda.getAdicionais()[1] != 0) {
                        adicionais += venda.getAdicionais()[1] + " CBL ";
                    }
                    if (venda.getAdicionais()[2] != 0) {
                        adicionais += venda.getAdicionais()[2] + " BCN ";
                    }
                    if (venda.getAdicionais()[3] != 0) {
                        adicionais += venda.getAdicionais()[3] + " QJO ";
                    }
                    for (int i = 0; i < 7; i++) {
                        valor += venda.getCaldinhos()[i] * 10;
                        if (i < 4) {
                            valor += venda.getAdicionais()[i] * 2;
                        }
                    }
                    modelo.addRow(new Object[]{sdf.format(venda.getDataVenda().getTime()),
                        venda.getCliente().getNome() + " (" + venda.getCliente().getEndereco() + ")",
                        caldinhos, adicionais, "R$" + valor, venda.getVenda_id()

                    });
                }
            }
            labelcondicional.setVisible(false);
            deleteVendaBtn.setVisible(false);
        }
    };

    private final Action deleteVendaAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (tabelaVendas.getSelectedRow() != -1) {
                EntityManager em = FonteDados.createEntityManager();
                VendaDaoImpl vdao = new VendaDaoImpl(em);
                switch (JOptionPane.showConfirmDialog(paiPanel, "TEM CERTEZA QUE DESEJA DELETAR ESTA VENDA?", "DELETA VENDA", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE)) {
                    case 0:
                        vdao.deleteVenda(Integer.parseInt(String.valueOf(tabelaVendas.getModel().getValueAt(tabelaVendas.getSelectedRow(), 5))));
                        buscaVendasAction.actionPerformed(e);
                        break;
                    default:
                        break;
                }
            }
        }
    };

    private final Action buscaClientesAction = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {

            //em = FonteDados.createEntityManager();
            ClienteDAOImpl clienteDAO = new ClienteDAOImpl(em);
            DefaultTableModel modelo = (DefaultTableModel) tabelaClientes.getModel();
            modelo.setRowCount(0);
            if (buscaField.getText().isEmpty()) {
                for (Cliente cliente : clienteDAO.fetchClientes()) {
                    em.refresh(cliente);
                    modelo.addRow(new Object[]{cliente.getNome(),
                        cliente.getEndereco(), cliente.getApartamento(),
                        "(" + cliente.getDdd() + ") " + cliente.getTelefone(),
                        cliente.getCliente_id()});
                }
            } else {
                for (Cliente cliente : clienteDAO.fetchClientes(buscaField.getText())) {
                    em.refresh(cliente);
                    modelo.addRow(new Object[]{cliente.getNome(),
                        cliente.getEndereco(), cliente.getApartamento(),
                        "(" + cliente.getDdd() + ") " + cliente.getTelefone(),
                        cliente.getCliente_id()});
                }
            }
            labelcondicional1.setVisible(false);
            labelcondicional2.setVisible(false);
            editClienteBtn.setVisible(false);

        }
    };

    private final Action editClienteAction = new AbstractAction() {
        @Override
        public void actionPerformed(ActionEvent e) {
            //numero do cliente:
            if (tabelaClientes.getSelectedRow() != -1) {
                int id = Integer.parseInt(String.valueOf(tabelaClientes.getModel().getValueAt(tabelaClientes.getSelectedRow(), 4)));
                ClienteDAOImpl clienteDAO = new ClienteDAOImpl(em);
                Cliente cliente = clienteDAO.getCliente(id);
                //POPULAR JFRAME
                EditDeleteCliente editDeleteCliente = new EditDeleteCliente(id);
                editDeleteCliente.setIdField(String.valueOf(id));
                editDeleteCliente.setNomeField(cliente.getNome());
                editDeleteCliente.setEnderecoField(cliente.getEndereco());
                editDeleteCliente.setApartamentoField(cliente.getApartamento());
                editDeleteCliente.setTelefoneField(String.valueOf(cliente.getDdd()) + String.valueOf(cliente.getTelefone()));
                int dec = JOptionPane.showOptionDialog(paiPanel, editDeleteCliente, "ALTERAR/REMOVER CLIENTE", JOptionPane.DEFAULT_OPTION, JOptionPane.PLAIN_MESSAGE, null, new Object[]{"ALTERAR", "REMOVER"}, null);
                switch (dec) {
                    case 0:
                        cliente.setNome(editDeleteCliente.getNomeField().toUpperCase());
                        if (editDeleteCliente.getEnderecoField().isEmpty()) {
                            cliente.setEndereco("CLIENTE INTERNO");
                            cliente.setInterno(true);
                        } else {
                            cliente.setEndereco(editDeleteCliente.getEnderecoField().toUpperCase());
                            cliente.setInterno(false);
                        }
                        cliente.setApartamento(editDeleteCliente.getApartamentoField().toUpperCase());
                        if (editDeleteCliente.getTelefoneField().length() >= 10) {
                            cliente.setDdd(Integer.parseInt(editDeleteCliente.getTelefoneField().substring(0, 2)));
                            cliente.setTelefone(Integer.parseInt(editDeleteCliente.getTelefoneField().substring(2)));
                        } else {
                            cliente.setDdd(11);
                            cliente.setTelefone(Integer.parseInt(editDeleteCliente.getTelefoneField()));
                        }
                        clienteDAO.atualizaCliente(cliente);
                        JOptionPane.showMessageDialog(paiPanel, cliente.getNome() + "ALTERADO COM SUCESSO!", "SUCESSO", JOptionPane.PLAIN_MESSAGE);
                        break;
                    case 1:
                        if (JOptionPane.showConfirmDialog(paiPanel, "TEM CERTEZA QUE DESEIJA REMOVER " + cliente.getNome() + "?", "CONFIRMAÇÃO", JOptionPane.YES_NO_OPTION) == 0) {
                            try {
                                clienteDAO.deleteCliente(id);
                            } catch (Exception exc) {
                                JOptionPane.showMessageDialog(paiPanel, "IMPOSSÍVEL EXCLUIR UM CLIENTE QUE JA CONCLUÍU UMA VENDA", "OPERAÇÃO NEGADA", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        break;
                    default:
                        break;
                }
                buscaClientesAction.actionPerformed(e);
            }
        }
    };
    //FIM IMPLEMENTAÇÕES DAS AÇÕES

    private void estoqueBtnestoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estoqueBtnestoqueActionPerformed
        CardLayout card = (CardLayout) paiPanel.getLayout();
        if (cardname.equals("estoque")) {
            cardname = "index";
            estoqueBtn.setBackground(Color.LIGHT_GRAY);
        } else {
            cardname = "estoque";
            estoqueBtn.setBackground(Color.GRAY);
            clientesBtn.setBackground(Color.LIGHT_GRAY);
            vendasBtn.setBackground(Color.LIGHT_GRAY);
            receitasBtn.setBackground(Color.LIGHT_GRAY);
        }
        card.show(paiPanel, cardname);
    }//GEN-LAST:event_estoqueBtnestoqueActionPerformed

    private void clientesBtnclientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientesBtnclientesActionPerformed
        CardLayout card = (CardLayout) paiPanel.getLayout();
        if (cardname.equals("clientes")) {
            cardname = "index";
            clientesBtn.setBackground(Color.LIGHT_GRAY);
        } else {
            cardname = "clientes";
            estoqueBtn.setBackground(Color.LIGHT_GRAY);
            clientesBtn.setBackground(Color.GRAY);
            vendasBtn.setBackground(Color.LIGHT_GRAY);
            receitasBtn.setBackground(Color.LIGHT_GRAY);
        }
        card.show(paiPanel, cardname);
    }//GEN-LAST:event_clientesBtnclientesActionPerformed

    private void vendasBtnvendasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendasBtnvendasActionPerformed
        CardLayout card = (CardLayout) paiPanel.getLayout();
        if (cardname.equals("vendas")) {
            cardname = "index";
            vendasBtn.setBackground(Color.LIGHT_GRAY);
        } else {
            cardname = "vendas";
            card.show(paiPanel, cardname);
            estoqueBtn.setBackground(Color.LIGHT_GRAY);
            clientesBtn.setBackground(Color.LIGHT_GRAY);
            vendasBtn.setBackground(Color.GRAY);
            receitasBtn.setBackground(Color.LIGHT_GRAY);
        }
        card.show(paiPanel, cardname);
    }//GEN-LAST:event_vendasBtnvendasActionPerformed

    private void receitasBtnreceitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receitasBtnreceitasActionPerformed
        CardLayout card = (CardLayout) paiPanel.getLayout();
        if (cardname.equals("receitas")) {
            cardname = "index";
            receitasBtn.setBackground(Color.LIGHT_GRAY);
        } else {
            cardname = "receitas";
            estoqueBtn.setBackground(Color.LIGHT_GRAY);
            clientesBtn.setBackground(Color.LIGHT_GRAY);
            vendasBtn.setBackground(Color.LIGHT_GRAY);
            receitasBtn.setBackground(Color.GRAY);
        }
        card.show(paiPanel, cardname);

        ingredientesCaldoVerde = "";
        ingredientesMandioqAlhoPoro = "";
        ingredientesAboboraCarne = "";
        ingredientesPalmito = "";
        ingredientesFeijao = "";
        ingredientesCanja = "";
        ingredientesErvilha = "";
        for (int i = 0; i < CaldoVerde.getIngredientes().size(); i++) {
            ingredientesCaldoVerde += (i + 1) + ". " + CaldoVerde.getIngredientes().get(i).getNome() + " - " + (int) CaldoVerde.getIngredientes().get(i).getQtd() + " " + CaldoVerde.getIngredientes().get(i).getUnidade() + "\n\n";
            ingredientesMandioqAlhoPoro += (i + 1) + ". " + MandioqAlhoPorro.getIngredientes().get(i).getNome() + " - " + (int) MandioqAlhoPorro.getIngredientes().get(i).getQtd() + " " + MandioqAlhoPorro.getIngredientes().get(i).getUnidade() + "\n\n";
            ingredientesAboboraCarne += (i + 1) + ". " + AboboraCarne.getIngredientes().get(i).getNome() + " - " + (int) AboboraCarne.getIngredientes().get(i).getQtd() + " " + AboboraCarne.getIngredientes().get(i).getUnidade() + "\n\n";
            ingredientesPalmito += (i + 1) + ". " + Palmito.getIngredientes().get(i).getNome() + " - " + (int) Palmito.getIngredientes().get(i).getQtd() + " " + Palmito.getIngredientes().get(i).getUnidade() + "\n\n";
            ingredientesFeijao += (i + 1) + ". " + Feijao.getIngredientes().get(i).getNome() + " - " + (int) Feijao.getIngredientes().get(i).getQtd() + " " + Feijao.getIngredientes().get(i).getUnidade() + "\n\n";
            ingredientesCanja += (i + 1) + ". " + Canja.getIngredientes().get(i).getNome() + " - " + (int) Canja.getIngredientes().get(i).getQtd() + " " + Canja.getIngredientes().get(i).getUnidade() + "\n\n";
            ingredientesErvilha += (i + 1) + ". " + Ervilha.getIngredientes().get(i).getNome() + " - " + (int) Ervilha.getIngredientes().get(i).getQtd() + " " + Ervilha.getIngredientes().get(i).getUnidade() + "\n\n";

        }
        if (receitaComboBox.getSelectedIndex() == 0) {
            ingredientesText.setText(ingredientesCaldoVerde);
            passosText.setText(CaldoVerde.getReceita());
            nomeCaldo.setText("Caldo Verde");
        }

    }//GEN-LAST:event_receitasBtnreceitasActionPerformed

    private void receitaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_receitaComboBoxActionPerformed

        String selected = "";
        switch (receitaComboBox.getSelectedIndex()) {
            case 0:
                selected = "receitaCaldoVerde";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/CaldoVerde.jpg")));
                ingredientesText.setText(ingredientesCaldoVerde);
                passosText.setText(CaldoVerde.getReceita());
                nomeCaldo.setText("Caldo Verde");
                break;
            case 1:
                selected = "receitaAboboraCarne";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/AboboraCarne.jpg")));
                ingredientesText.setText(ingredientesAboboraCarne);
                passosText.setText(AboboraCarne.getReceita());
                nomeCaldo.setText("Sopa de Abóbora com Carne");
                break;
            case 2:
                selected = "receitaMandioqAlhoPoro";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/MandioqAlhoPoro.jpg")));
                ingredientesText.setText(ingredientesMandioqAlhoPoro);
                passosText.setText(MandioqAlhoPorro.getReceita());
                nomeCaldo.setText("Sopa de Mandioquinha com Alho Poró");
                break;
            case 3:
                selected = "receitaPalmito";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/Palmito.jpg")));
                ingredientesText.setText(ingredientesPalmito);
                passosText.setText(Palmito.getReceita());
                nomeCaldo.setText("Creme de Palmito");
                break;
            case 4:
                selected = "receitaCanja";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/Canja.jpg")));
                ingredientesText.setText(ingredientesCanja);
                passosText.setText(Canja.getReceita());
                nomeCaldo.setText("Canja de Galinha");
                break;
            case 5:
                selected = "receitaErvilha";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/Ervilha.jpg")));
                ingredientesText.setText(ingredientesErvilha);
                passosText.setText(Ervilha.getReceita());
                nomeCaldo.setText("Creme de Ervilha");
                break;
            case 6:
                selected = "receitaFeijao";
                fotosCaldos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/caldinho/ja/images/Feijao.jpg")));
                ingredientesText.setText(ingredientesFeijao);
                passosText.setText(Feijao.getReceita());
                nomeCaldo.setText("Caldinho de Feijão");
                break;
        }


    }//GEN-LAST:event_receitaComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Caldinho sopa = null;
        switch (receitaComboBox.getSelectedIndex()) {
            case 0:
                sopa = new CaldoVerde();
                break;
            case 1:
                sopa = new AboboraCarne();
                break;
            case 2:
                sopa = new MandioqAlhoPorro();
                break;
            case 3:
                sopa = new Palmito();
                break;
            case 4:
                sopa = new Canja();
                break;
            case 5:
                sopa = new Ervilha();
                break;
            case 6:
                sopa = new Feijao();
                break;
        }
        sopa.fazCaldo(Float.parseFloat(JOptionPane.showInputDialog("Informe a quantidade de " + nomeCaldo.getText() + " que será feita")));

    }//GEN-LAST:event_jButton1ActionPerformed

    private void canNvCliBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_canNvCliBtnActionPerformed
        CardLayout card = (CardLayout) clientesPnl.getLayout();
        card.show(clientesPnl, "table");
    }//GEN-LAST:event_canNvCliBtnActionPerformed

    private void novoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoBtnActionPerformed
        CardLayout card = (CardLayout) clientesPnl.getLayout();
        card.show(clientesPnl, "novo");
    }//GEN-LAST:event_novoBtnActionPerformed

    private void iniciarNovaVendaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iniciarNovaVendaBtnActionPerformed
        CardLayout card = (CardLayout) vendasPnl.getLayout();
        card.show(vendasPnl, "novaVenda");
    }//GEN-LAST:event_iniciarNovaVendaBtnActionPerformed

    private void tabelaClientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaClientesFocusGained
        labelcondicional1.setVisible(true);
        labelcondicional2.setVisible(true);
        editClienteBtn.setVisible(true);
    }//GEN-LAST:event_tabelaClientesFocusGained

    private void tabelaVendasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabelaVendasFocusGained
        labelcondicional.setVisible(true);
        deleteVendaBtn.setVisible(true);
    }//GEN-LAST:event_tabelaVendasFocusGained

    private void dnQJOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnQJOActionPerformed
        qjo--;
        queijoLabel.setText(qjo+" Queijos Ralados");
        if(qjo==0){
            dnQJO.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnQJOActionPerformed

    private void dnCEBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnCEBActionPerformed
        ceb--;
        cebolinhaLabel.setText(ceb+" Cebolinhas");
        if(ceb==0){
            dnCEB.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnCEBActionPerformed

    private void dnBACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnBACActionPerformed
        bac--;
        baconLabel.setText(bac+" Bacons");
        if(bac==0){
            dnBAC.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnBACActionPerformed

    private void dnTORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnTORActionPerformed
        tor--;
        torradinhaLabel.setText(tor+" Torradinhas");
        if(tor==0){
            dnTOR.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnTORActionPerformed

    private void upQJOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upQJOActionPerformed
        qjo++;
        queijoLabel.setText(qjo+" Queijos Ralados");
        if(!dnQJO.isVisible()){
            dnQJO.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upQJOActionPerformed

    private void upCEBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upCEBActionPerformed
        ceb++;
        cebolinhaLabel.setText(ceb+" Cebolinhas");
        if(!dnCEB.isVisible()){
            dnCEB.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upCEBActionPerformed

    private void upBACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBACActionPerformed
        bac++;
        baconLabel.setText(bac+" Bacons");
        if(!dnBAC.isVisible()){
            dnBAC.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upBACActionPerformed

    private void upTORActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upTORActionPerformed
        tor++;
        torradinhaLabel.setText(tor+" Torradinhas");
        if(!dnTOR.isVisible()){
            dnTOR.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upTORActionPerformed

    private void upERVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upERVActionPerformed
        erv++;
        ervilhaLabel.setText(erv+" Caldos de Ervilha");
        if(!dnERV.isVisible()){
            dnERV.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upERVActionPerformed

    private void upGALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upGALActionPerformed
        can++;
        canjaLabel.setText(can+" Canjas de Galinha");
        if(!dnGAL.isVisible()){
            dnGAL.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upGALActionPerformed

    private void upFJOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upFJOActionPerformed
        fjo++;
        feijaoLabel.setText(fjo+" Caldinhos de Feijão");
        if(!dnFJO.isVisible()){
            dnFJO.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upFJOActionPerformed

    private void upPALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upPALActionPerformed
        pal++;
        palmitoLabel.setText(pal+" Caldos de Palmito");
        if(!dnPAL.isVisible()){
            dnPAL.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upPALActionPerformed

    private void upABBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upABBActionPerformed
        abb++;
        aboboraLabel.setText(abb+" Abóboras com Carne");
        if(!dnABB.isVisible()){
            dnABB.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upABBActionPerformed

    private void dnERVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnERVActionPerformed
        erv--;
        ervilhaLabel.setText(erv+" Caldos de Ervilha");
        if(erv==0){
            dnERV.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnERVActionPerformed

    private void dnGALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnGALActionPerformed
        can--;
        canjaLabel.setText(can+" Canjas de Galinha");
        if(can==0){
            dnGAL.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnGALActionPerformed

    private void dnFJOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnFJOActionPerformed
        fjo--;
        feijaoLabel.setText(fjo+" Caldinhos de Feijão");
        if(fjo==0){
            dnFJO.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnFJOActionPerformed

    private void dnPALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnPALActionPerformed
        pal--;
        palmitoLabel.setText(pal+" Caldos de Palmito");
        if(pal==0){
            dnPAL.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnPALActionPerformed

    private void dnABBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnABBActionPerformed
        abb--;
        aboboraLabel.setText(abb+" Abóboras com Carne");
        if(abb==0){
            dnABB.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnABBActionPerformed

    private void dnMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnMNDActionPerformed
        mnd--;
        mandioquinhaLabel.setText(mnd+ " Mandioquinhas com Alho Poró");
        if(mnd==0){
            dnMND.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnMNDActionPerformed

    private void upMNDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upMNDActionPerformed
        mnd++;
        mandioquinhaLabel.setText(mnd+" Mandioquinhas com Alho Poró");
        if(!dnMND.isVisible()){
            dnMND.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upMNDActionPerformed

    private void dnVRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dnVRDActionPerformed
        vrd--;
        caldoVerdeLabel.setText(vrd+ " Caldos Verdes");
        if(vrd==0){
            dnVRD.setVisible(false);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_dnVRDActionPerformed

    private void upVRDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upVRDActionPerformed
        vrd ++;
        caldoVerdeLabel.setText(vrd+" Caldos Verdes");
        if(!dnVRD.isVisible()){
            dnVRD.setVisible(true);
        }
        atualizaValorAction.actionPerformed(evt);
    }//GEN-LAST:event_upVRDActionPerformed

    private void listaVendasBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaVendasBtnActionPerformed
        CardLayout card = (CardLayout) vendasPnl.getLayout();
        card.show(vendasPnl, "listaVenda");
    }//GEN-LAST:event_listaVendasBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CardLayoutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CardLayoutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CardLayoutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardLayoutFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Process process = new ProcessBuilder("C:\\xampp\\xampp_start.exe").start();
                } catch (IOException ex) {
                    Logger.getLogger(CardLayoutFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
                CardLayoutFrame appFrame = new CardLayoutFrame();
                appFrame.setVisible(true);
                appFrame.setLocationRelativeTo(null);
                //new CardLayoutFrame().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboboraLabel;
    private java.awt.TextField apartamentoField;
    private javax.swing.JLabel baconLabel;
    private javax.swing.JButton buscaBtn;
    private javax.swing.JButton buscaClienteVendaBtn;
    private javax.swing.JTextField buscaClienteVendaField;
    private javax.swing.JTextField buscaField;
    private javax.swing.JButton buscaVendasBtn;
    private javax.swing.JLabel caldoVerdeLabel;
    private javax.swing.JButton canNvCliBtn;
    private javax.swing.JLabel canjaLabel;
    private javax.swing.JLabel cebolinhaLabel;
    private javax.swing.JButton clientesBtn;
    private javax.swing.JPanel clientesPnl;
    private org.jdesktop.swingx.JXDatePicker dataFim;
    private org.jdesktop.swingx.JXDatePicker dataInicio;
    private javax.swing.JButton deleteVendaBtn;
    private org.jdesktop.swingx.JXDatePicker diaVendaDatePicker;
    private javax.swing.JButton dnABB;
    private javax.swing.JButton dnBAC;
    private javax.swing.JButton dnCEB;
    private javax.swing.JButton dnERV;
    private javax.swing.JButton dnFJO;
    private javax.swing.JButton dnGAL;
    private javax.swing.JButton dnMND;
    private javax.swing.JButton dnPAL;
    private javax.swing.JButton dnQJO;
    private javax.swing.JButton dnTOR;
    private javax.swing.JButton dnVRD;
    private javax.swing.JButton editClienteBtn;
    private javax.persistence.EntityManager em;
    private java.awt.TextField enderecoField;
    private javax.swing.JLabel ervilhaLabel;
    private javax.swing.JButton estoqueBtn;
    private javax.swing.JPanel estoquePnl;
    private javax.swing.JLabel feijaoLabel;
    private javax.swing.JLabel fotosCaldos;
    private javax.swing.JPanel indexPnl;
    private javax.swing.JTextPane ingredientesText;
    private javax.swing.JButton iniciarNovaVendaBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel labelcondicional;
    private javax.swing.JLabel labelcondicional1;
    private javax.swing.JLabel labelcondicional2;
    private javax.swing.JComboBox listaClientecomboBox;
    private javax.swing.JPanel listaVendaPnl;
    private javax.swing.JButton listaVendasBtn;
    private javax.swing.JScrollPane listaVendasScroll;
    private javax.swing.JLabel mandioquinhaLabel;
    private javax.swing.JLabel nomeCaldo;
    private java.awt.TextField nomeField;
    private javax.swing.JButton novaVendaBtn;
    private javax.swing.JPanel novaVendaPnl;
    private javax.swing.JPanel novo;
    private javax.swing.JButton novoBtn;
    private javax.swing.JButton nvCliBtn;
    private javax.swing.JPanel paiPanel;
    private javax.swing.JLabel palmitoLabel;
    private javax.swing.JTextPane passosText;
    private javax.swing.JLabel queijoLabel;
    private javax.swing.JComboBox receitaComboBox;
    private javax.swing.JButton receitasBtn;
    private javax.swing.JPanel receitasCardsPnl;
    private javax.swing.JPanel receitasPnl;
    private javax.swing.JPanel receitasPnlCaldoVerde;
    private javax.swing.JTable tabelaClientes;
    private javax.swing.JTable tabelaVendas;
    private javax.swing.JPanel table;
    private java.awt.TextField telefoneField;
    private javax.swing.JLabel torradinhaLabel;
    private javax.swing.JButton upABB;
    private javax.swing.JButton upBAC;
    private javax.swing.JButton upCEB;
    private javax.swing.JButton upERV;
    private javax.swing.JButton upFJO;
    private javax.swing.JButton upGAL;
    private javax.swing.JButton upMND;
    private javax.swing.JButton upPAL;
    private javax.swing.JButton upQJO;
    private javax.swing.JButton upTOR;
    private javax.swing.JButton upVRD;
    private javax.swing.JLabel valorField;
    private javax.swing.JButton vendasBtn;
    private javax.swing.JPanel vendasPnl;
    // End of variables declaration//GEN-END:variables
}
